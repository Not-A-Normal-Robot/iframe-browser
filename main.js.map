{
  "version": 3,
  "sources": ["main.ts"],
  "sourcesContent": [
    "/// <reference lib=\"dom\" />\n\nfunction panic(message: string): never\n{\n    debugger;\n    if (Error)\n    {\n        const error = new Error(message);\n\n        const global = window ?? globalThis;\n\n        if (global && 'console' in global && 'error' in global.console)\n        {\n            const err = console.error;\n            err(`panicked: `, message);\n            err(`stack trace: `, error.stack);\n            err(`error object: `, error);\n        }\n\n        if (global && 'alert' in global)\n        {\n            global.alert(\n                `panicked: ${message}\\n\\nstack trace:\\n${error.stack}\\n\\nsee console for details`\n            );\n        }\n    }\n\n    throw message;\n}\n\nfunction assert(x: boolean, message: string | undefined = undefined): asserts x\n{\n    if (!x)\n    {\n        panic(message ? `assertion failed: ${message}` : \"assertion failed\");\n    }\n}\n\nfunction assertNonNull<T>(x: T | null): T\n{\n    assert(x !== null, \"null value given to assertNonNull\");\n    return x;\n}\n\nconst btn_refresh = assertNonNull(document.getElementById(\"btn-refresh\")) as HTMLButtonElement;\nconst url_field = assertNonNull(document.getElementById(\"url-field\")) as HTMLInputElement;\nconst btn_go = assertNonNull(document.getElementById(\"btn-go\")) as HTMLButtonElement;\nconst iframe = assertNonNull(document.getElementById(\"iframe\")) as HTMLIFrameElement;\nconst progress = assertNonNull(document.getElementById(\"progress\")) as HTMLProgressElement;\n\nfunction go(url: string)\n{\n    progress.removeAttribute('value');\n    progress.removeAttribute('max');\n    progress.textContent = \"Loading...\";\n    iframe.src = url;\n}\n\nbtn_refresh.addEventListener('click', () =>\n{\n    go(iframe.src);\n});\nurl_field.addEventListener('keypress', (ev) =>\n{\n    if (ev.code == \"Enter\")\n    {\n        go(url_field.value);\n    }\n});\nbtn_go.addEventListener('click', () =>\n{\n    go(url_field.value);\n});\niframe.addEventListener('load', () =>\n{\n    progress.value = 1;\n    progress.max = 1;\n});"
  ],
  "mappings": "AAEA,SAAS,CAAK,CAAC,EACf,CACI,SACA,GAAI,MACJ,CACI,IAAM,EAAQ,IAAI,MAAM,CAAO,EAEzB,EAAS,QAAU,WAEzB,GAAI,GAAU,YAAa,GAAU,UAAW,EAAO,QACvD,CACI,IAAM,EAAM,QAAQ,MACpB,EAAI,aAAc,CAAO,EACzB,EAAI,gBAAiB,EAAM,KAAK,EAChC,EAAI,iBAAkB,CAAK,EAG/B,GAAI,GAAU,UAAW,EAErB,EAAO,MACH,aAAa;AAAA;AAAA;AAAA,EAA4B,EAAM;AAAA;AAAA,wBACnD,EAIR,MAAM,EAGV,SAAS,CAAM,CAAC,EAAY,EAA8B,OAC1D,CACI,IAAK,EAED,EAAM,EAAU,qBAAqB,IAAY,kBAAkB,EAI3E,SAAS,CAAgB,CAAC,EAC1B,CAEI,OADA,EAAO,IAAM,KAAM,mCAAmC,EAC/C,EAGX,IAAM,EAAc,EAAc,SAAS,eAAe,aAAa,CAAC,EAClE,EAAY,EAAc,SAAS,eAAe,WAAW,CAAC,EAC9D,EAAS,EAAc,SAAS,eAAe,QAAQ,CAAC,EACxD,EAAS,EAAc,SAAS,eAAe,QAAQ,CAAC,EACxD,EAAW,EAAc,SAAS,eAAe,UAAU,CAAC,EAElE,SAAS,CAAE,CAAC,EACZ,CACI,EAAS,gBAAgB,OAAO,EAChC,EAAS,gBAAgB,KAAK,EAC9B,EAAS,YAAc,aACvB,EAAO,IAAM,EAGjB,EAAY,iBAAiB,QAAS,IACtC,CACI,EAAG,EAAO,GAAG,EAChB,EACD,EAAU,iBAAiB,WAAY,CAAC,IACxC,CACI,GAAI,EAAG,MAAQ,QAEX,EAAG,EAAU,KAAK,EAEzB,EACD,EAAO,iBAAiB,QAAS,IACjC,CACI,EAAG,EAAU,KAAK,EACrB,EACD,EAAO,iBAAiB,OAAQ,IAChC,CACI,EAAS,MAAQ,EACjB,EAAS,IAAM,EAClB",
  "debugId": "D9FB2A8DD6B2F25164756E2164756E21",
  "names": []
}